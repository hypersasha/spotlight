{"version":3,"sources":["img/persik.png","component/Spotcard.js","panels/Home.js","panels/Persik.js","panels/Spotroom.js","App.js","index.js"],"names":["module","exports","Spotcard","props","className","description","before","src","size","asideContent","onClick","go","data-to","Home","id","fetchedUser","osName","platform","Persik","left","IOS","persik","alt","Spotroom","useState","flashInfo","setFlashInfo","useEffect","a","connect","sendPromise","info","fetchFlashlightInfo","is_available","title","state","App","activePanel","setActivePanel","setUser","startParams","setStartParams","history","setHistory","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","fetchData","hash_array","window","location","hash","substring","split","start_vars","forEach","hashItem","hashInfo","room","goId","receiveStartParams","e","currentTarget","dataset","to","currentHistory","push","send","panelId","goBack","history_tmp","pop","prevPanel","length","isWebView","onSwipeBack","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f5ee9804.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\n\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\n\r\nimport './spotcard.css';\r\n\r\nconst Spotcard = (props) => (\r\n    <Div>\r\n        <div className={'spotcard-container'}>\r\n            <div className={'spotcard-cover'}>\r\n                <div className={'spotcard-cover-dark'}></div>\r\n                <div className={'spotcard-title'}>Рядом с Вами</div>\r\n            </div>\r\n            <div className='spotcard-inforow'>\r\n                <Cell \r\n                    description={'I Like (the idea of) You'}\r\n                    before={<Avatar src={\"https://image-ticketfly.imgix.net/00/03/20/63/52-og.jpg?w=300&h=300\"} size={42} />}\r\n                    asideContent={<Button onClick={props.go} data-to=\"spotroom\">Засветиться</Button>}>\r\n                            Tessa Violet\r\n                </Cell>\r\n            </div>    \r\n        </div>\r\n    </Div>\r\n);\r\n\r\nexport default Spotcard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\n\r\nimport Spotcard from '../component/Spotcard';\r\nimport { Footer } from '@vkontakte/vkui';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Spotlight</PanelHeader>\r\n\t\t<Spotcard go={go} />\r\n\t\t<Footer>Нажмите «Засветиться», чтобы синхронизировать Ваш фонарик с другими людьми.</Footer>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow';\r\nimport FormStatus from '@vkontakte/vkui/dist/components/FormStatus/FormStatus';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\n\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nconst osName = platform();\r\n\r\nconst Spotroom = (props) => {\r\n\r\n    const [flashInfo, setFlashInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchFlashlightInfo() {\r\n            const info = await connect.sendPromise('VKWebAppFlashGetInfo');\r\n            setFlashInfo(info);\r\n        }\r\n\r\n        fetchFlashlightInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}>\r\n                Засветиться\r\n            </PanelHeader>\r\n            <Group>\r\n                <Cell \r\n                    description={'I Like (the idea of) You'}\r\n                    before={<Avatar size={72} src={'https://image-ticketfly.imgix.net/00/03/20/63/52-og.jpg?w=300&h=300'} />}>\r\n                    Tessa Violet\r\n                </Cell>\r\n            </Group>\r\n            {(!flashInfo || flashInfo.is_available === false) &&\r\n                <Div>\r\n                    <FormStatus title='Фонарик не доступен' state='error'>\r\n                        Не удалось получить доступ к фонарику на Вашем устройстве.\r\n                    </FormStatus>\r\n                </Div>\r\n            }\r\n            <Group title={'Информация о комнате'}>\r\n                <List>\r\n                    <Cell>\r\n                        <InfoRow title='Участники'>65 человек</InfoRow>\r\n                    </Cell>\r\n                    <Cell>\r\n                        <InfoRow title='Анимация света'>Яркие вспышки</InfoRow>\r\n                    </Cell>\r\n                </List>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nSpotroom.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Spotroom;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport Spotroom from './panels/Spotroom';\r\nimport { ConfigProvider } from '@vkontakte/vkui';\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [startParams, setStartParams] = useState({});\r\n\tconst [history, setHistory]  = useState(['home']);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = 'client_dark';\r\n\t\t\t\t// data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t}\r\n\t\tfetchData();\r\n\r\n\t\t// Try to get app start params.\r\n\t\treceiveStartParams();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t\tlet currentHistory = history;\r\n\t\tcurrentHistory.push(e.currentTarget.dataset.to);\r\n\r\n\t\tif (activePanel === 'home') {\r\n\t\t\tconnect.send('VKWebAppEnableSwipeBack');\r\n\t\t} \r\n\r\n\t\tsetHistory(currentHistory);\r\n\t};\r\n\r\n\tconst goId = panelId => {\r\n\t\tsetActivePanel(panelId);\r\n\t\tlet currentHistory = history;\r\n\t\tcurrentHistory.push(panelId);\r\n\r\n\t\tif (activePanel === 'home') {\r\n\t\t\tconnect.send('VKWebAppEnableSwipeBack');\r\n\t\t} \r\n\r\n\t\tsetHistory(currentHistory);\r\n\t}\r\n\r\n\tconst goBack = () => {\r\n\t\tlet history_tmp = history;\r\n\t\thistory_tmp.pop();\r\n\t\tconst prevPanel = history_tmp[history_tmp.length - 1];\r\n\t\tif (prevPanel === 'home') {\r\n\t\t\tconnect.send('VKWebAppDisableSwipeBack')\r\n\t\t}\r\n\t\tsetHistory(history_tmp);\r\n\t\tsetActivePanel(prevPanel);\r\n\t}\r\n\r\n\tfunction receiveStartParams() {\r\n\t\tlet hash = window.location.hash.substring(1);\r\n\t\tlet hash_array = hash.split('&');\r\n\t\tlet start_vars = {};\r\n\t\thash_array.forEach(hashItem => {\r\n\t\t\tlet hashInfo = hashItem.split('=');\r\n\t\t\tstart_vars[hashInfo[0]] = hashInfo[1];\r\n\t\t})\r\n\t\tsetStartParams(start_vars);\r\n\r\n\t\tif (start_vars.room && start_vars.room !== '') {\r\n\t\t\tgoId('spotroom');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ConfigProvider isWebView={true}>\r\n\t\t<View activePanel={activePanel} history={history} onSwipeBack={goBack}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t<Spotroom id='spotroom' go={goBack} startParams={startParams} />\r\n\t\t</View>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}